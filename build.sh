#!/bin/bash

# bail on error
set -e

# build autogenerated code in test to keep the analyzer happy
dart run build_runner build test

echo "Analyzing with dart analyze"
  dartanalyzer="dart analyze --fatal-infos lib/*.dart test/*.dart"
  $dartanalyzer

dart pub deps

# run the tests
dart run build_runner test

# Only run with the stable version of dart.
if [ "$TRAVIS_DART_VERSION" = "stable" ]; then
  dart pub global activate dart_style
  dirty_code=$(pub global run dart_style:format --dry-run lib/ test/ example/)
  if [[ -n "$dirty_code" ]]; then
    echo Unformatted files:
    echo "$dirty_code" | sed 's/^/    /'
    exit 1
  else
    echo All Dart source files are formatted.
  fi

  # Install dart_coveralls; gather and send coverage data.
  if [ "$COVERALLS_TOKEN" ]; then
    dart pub global activate dart_coveralls
    dart pub global run dart_coveralls report \
      --retry 2 \
      --exclude-test-files \
      test/mustache_all.dart
  fi
fi
